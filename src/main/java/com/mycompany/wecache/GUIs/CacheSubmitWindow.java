/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.wecache.GUIs;

import com.mypopsy.maps.StaticMap.GeoPoint;
import com.google.maps.model.LatLng;
import com.mycompany.wecache.BaseClasses.Cache;
import com.mycompany.wecache.Info.JsonHandler;
import com.mycompany.wecache.Info.MapFetcher;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class CacheSubmitWindow extends javax.swing.JFrame
{

    /**
     * Creates new form CacheInputWindow
     */
    public CacheSubmitWindow()
    {
        
        initComponents();
        
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        this.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button_Submit = new javax.swing.JButton();
        textField_Latitude = new javax.swing.JTextField();
        label_Latitude = new javax.swing.JLabel();
        label_Longitude = new javax.swing.JLabel();
        textField_Longitude = new javax.swing.JTextField();
        label_Address = new javax.swing.JLabel();
        textField_Address = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        button_Submit.setText("Submit");
        button_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_SubmitActionPerformed(evt);
            }
        });

        label_Latitude.setText("Latitude");

        label_Longitude.setText("Longitude");

        label_Address.setText("Address");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textField_Address)
                    .addComponent(button_Submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textField_Latitude, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label_Latitude))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label_Longitude)
                                    .addComponent(textField_Longitude, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(label_Address))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_Latitude)
                    .addComponent(label_Longitude))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField_Latitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textField_Longitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_Address)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_SubmitActionPerformed
        
        String address = textField_Address.getText();
        double latitude;
        double longitude;
        GeoPoint location;
        
        
        if (!(textField_Latitude.getText().equals("") || textField_Longitude.getText().equals("")))
        {
            try
            {
                latitude = Double.parseDouble(textField_Latitude.getText());
                longitude = Double.parseDouble(textField_Longitude.getText());
                
                if (address.equals(""))
                {
                    address = MapFetcher.locate(latitude, longitude);
                    
                    location = new GeoPoint(latitude, longitude, address);
                }
                else
                {
                    location = new GeoPoint(latitude, longitude, address);
                }
                
            }
            catch (Exception e)
            {
                latitude = 0;
                longitude = 0;
                if (address.equals(""))
                {
                    JOptionPane.showMessageDialog(this, "Improper input. Please check that your information is correct.");
                    return;
                }
                else
                {
                    
                    LatLng coords = MapFetcher.locate(address);
            
                    location = new GeoPoint(coords.lat, coords.lng, address);
                    
                }
            }
        }
        else if (address.equals(""))
        {
            JOptionPane.showMessageDialog(this, "No inputs.");
            return;
        }
        else
        {
            LatLng coords = MapFetcher.locate(address);
            
            location = new GeoPoint(coords.lat, coords.lng, address);
        }
        
        if (location.latitude() <= -90 || location.latitude() >= 90)
        {
            JOptionPane.showMessageDialog(this, "Improper input. Please check that your information is correct.");
            return;
        }
        else if (location.longitude() < -180 || location.latitude() > 180)
        {
            JOptionPane.showMessageDialog(this, "Improper input. Please check that your information is correct.");
            return;
        }
        
        
        ArrayList<Cache> list = new ArrayList<Cache>();
        list.add(new Cache(location));
        
        MainWindow.getSingleton().changeCache(list.get(0));
        JsonHandler.storeWaitlistCaches(list);
        
    }//GEN-LAST:event_button_SubmitActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_Submit;
    private javax.swing.JLabel label_Address;
    private javax.swing.JLabel label_Latitude;
    private javax.swing.JLabel label_Longitude;
    private javax.swing.JTextField textField_Address;
    private javax.swing.JTextField textField_Latitude;
    private javax.swing.JTextField textField_Longitude;
    // End of variables declaration//GEN-END:variables

}
